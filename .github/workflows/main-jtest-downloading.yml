# -------------------------------------------------
# This workflow downloads, configures and runs Parasoft Jtest analysis with selected build tool (maven, gradle, etc)
# For details on how to configure your project with Jtest please refer to the Jtest examples README file
# -------------------------------------------------
# Prerequisites:
# 1. Set up the Jtest settings via the 'JTEST_PARAMS' secret variable in GitHub Settings or provide them to the Jtest run command.
# 2. Include 'sarif' value for report.format key in the settings (e.g. -Dproperty.report.format=html,pdf,sarif).
name: Parasoft Jtest - from scratch

# Define when the action will run. 
on:
  # Triggers the workflow on push, pull request, or other events
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]

  # Allows to run workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  jtest:
    name: Jtest job execution
    # The type of runner that the job will run on
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ../
        shell: bash
    env:
      release_url: ${{ secrets.JTEST_URL }}
      app_file: parasoft_jtest_2021.1.0_linux_x86_64.tar.gz
    
    steps:
      - name: Download Jtest
        run: wget -nv -O ${app_file} ${release_url}${app_file}

      - name: Unpack app file on Linux
        if: runner.os == 'Linux'
        run: tar -xzf ${app_file} && chmod a+x jtest/jtestcli

      - name: Unpack app file on Windows
        if: runner.os == 'Windows'
        run: unzip -q -o ${app_file} && chmod a+x jtest/jtestcli.exe

      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Create Maven settings for Jtest
        run: echo '
          <settings>
            <pluginGroups>
              <pluginGroup>com.parasoft.jtest</pluginGroup>
             <pluginGroup>com.parasoft.xtest.cbt</pluginGroup>
            </pluginGroups>

            <profiles>
              <profile>
                <id>jtest-settings-profile</id>
                <activation>
                  <activeByDefault>true</activeByDefault>
                </activation>
                <properties>
                  <jtest.home>../../jtest</jtest.home>
                </properties>
                <pluginRepositories>
                  <pluginRepository>
                    <id>jtest-local</id>
                    <url>file://${jtest.home}/integration/maven</url>
                  </pluginRepository>
                </pluginRepositories>
              </profile>
            </profiles>
              <mirrors>
                <mirror>
                  <id>jtest-local-mirror</id>
                  <mirrorOf>jtest-local</mirrorOf>
                  <url>file:../../jtest/integration/maven</url>
                </mirror>
              </mirrors>
          </settings>
          ' > maven_jtest_settings.xml

      - name: List working directory
        run: ls -l
      # - name: List app directory
      #   run: ls -l jtest

      - name: Run static analysis
        # -------------------------------------------------
        # Prerequisites:
        # 1. Configure working directory if it is different than repository root.
        working-directory: jtest-demo
        # 2. Enable the "Running" step below.
        # If you want to fail the step when any Jtest violation is reported, add "-Djtest.fail=true" to Jtest parameters run options.
          
        # -------------------------------------------------
        # Running with Maven
        # Prerequisites:
        # 1. Uncomment and fill out the following to run the "Recommended Rules" test configuration:
        #run: ./mvnw --settings ../../maven_jtest_settings.xml jtest:jtest "-Dproperty.dtp.server=" "-Dproperty.dtp.port=" "-Dproperty.dtp.user=" "-Dproperty.dtp.password=" "-Dproperty.report.format=html,sarif"
        run: ./mvnw --settings ../../maven_jtest_settings.xml jtest:jtest ${{ secrets.JTEST_PARAMS }}
        # or uncomment the following to run the specified test configuration:
        # run: ./mvnw --settings ../../maven_jtest_settings.xml jtest:jtest "-Djtest.config=builtin://Recommended Rules" ${{ secrets.JTEST_PARAMS }}
      
      # -------------------------------------------------
      # Archive the findings reports as job artifact
      - name: Upload report artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Report files
          path: jtest-demo/target/jtest/report.*
      
      # -------------------------------------------------
      # Upload the findings into the GitHub code scanning alert section
      - uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: jtest-demo/target/jtest/report.sarif 
